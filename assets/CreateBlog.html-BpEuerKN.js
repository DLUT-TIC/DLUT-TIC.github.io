import{_ as a,r as t,o as c,c as d,b as e,d as n,a as i,e as l}from"./app-C2biMikL.js";const o={},r=l('<h1 id="【教程】hugo-github博客部署" tabindex="-1"><a class="header-anchor" href="#【教程】hugo-github博客部署"><span>【教程】Hugo+Github博客部署</span></a></h1><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><h3 id="下载hugo" tabindex="-1"><a class="header-anchor" href="#下载hugo"><span>下载Hugo</span></a></h3>',3),p={href:"https://gohugo.io/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/gohugoio/hugo",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,[e("img",{src:"https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/image1.png",alt:""})],-1),h=e("li",null,[e("p",null,[n("点击"),e("code",null,"Github"),n("，点击"),e("code",null,"Tags"),n("，选择合适的版本下载。")])],-1),m=e("h3",{id:"下载git",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下载git"},[e("span",null,"下载git")])],-1),v={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},b=e("strong",null,"Git官网https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/image1.png",-1),_=e("p",null,[e("img",{src:"https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181723016.png",alt:"Git官网"})],-1),k=e("li",null,[e("p",null,[n("点击 "),e("strong",null,"Download for Windows"),n(" 按照指引安装即可。")])],-1),x=l('<h2 id="搭建博客" tabindex="-1"><a class="header-anchor" href="#搭建博客"><span>搭建博客</span></a></h2><h3 id="创建blog" tabindex="-1"><a class="header-anchor" href="#创建blog"><span>创建Blog</span></a></h3><ul><li><p>解压<code>hugo_extended_0.134.2_windows-amd64.zip</code>文件，点击进入并cmd打开命令行窗口，输入<code>hugo new site xxxx</code>创建文件（我这里是dev）。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181724763.png" alt="file截图"></p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181724285.png" alt="cmddev"></p></li><li><p>但是新创建的<code>dev</code>文件夹里面没有<code>hugo.exe</code>文件，为了使在<code>dev</code>文件下仍能使用<code>hugo</code>命令，需要复制<code>hugo.exe</code>文件到<code>dev</code>文件内。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181724772.png" alt="111"></p></li><li><p>在命令行中切换到已创建好的<code>dev</code>文件夹，输入<code>hugo server -D</code>，运行成功出现以下界面：</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181725280.png" alt="hugo server -D"></p></li><li><p>打开浏览器输入<code>http://localhost:1313/</code>发现会出现以下界面：</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181726828.png" alt="Page Not Found"></p></li><li><p>这是因为还未下载主题，可以看到<code>dev\\themes</code>文件夹下为空。</p></li></ul><h3 id="下载主题" tabindex="-1"><a class="header-anchor" href="#下载主题"><span>下载主题</span></a></h3>',4),f={href:"https://gohugo.io/",target:"_blank",rel:"noopener noreferrer"},S=e("strong",null,"Hugo官网",-1),j=l('<li><p>点击<code>Themes</code>选择一款适合的主题，作为演示，我选择的是<code>Stack</code>这款主题。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181727730.png" alt="Stack"></p></li><li><p>点击<code>Download</code>进入主题<code>github</code>界面，并选择适当的版本下载。</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181727160.png" alt="image9"></p></li><li><p>将文件解压存储在<code>dev\\themes</code>文件下，并将<code>exampleSite</code>样例数据中的<code> Content</code> 和 <code>hugo.yaml</code> 复制到主文件夹中，并删掉<code>hugo.toml</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181727952.png" alt=""></p></li><li><p>修改<code>themes</code>文件夹下面主题文件夹的名字，使其和<code>hugo.yaml</code>中的一样。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181728638.png" alt=""></p></li><li><p>再次在命令行中输入<code>hugo server -D</code>，查看主题，发现已经正确显示。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181728178.png" alt="theme"></p></li>',6),z=l(`<h2 id="github部署" tabindex="-1"><a class="header-anchor" href="#github部署"><span>Github部署</span></a></h2><h3 id="常规部署" tabindex="-1"><a class="header-anchor" href="#常规部署"><span>常规部署</span></a></h3><ul><li><p>准备工作：创建一个自己的github账号。</p></li><li><p>新建仓库，命名要用<code>{github用户名}.github.io</code>，如果这是你搭建的第一个博客，这一步最好在前面用自己的用户名，这会避免很多Bug（也许是我太菜了~）。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181728849.png" alt=""></p></li><li><p>然后进入自己的仓库，前往<code>setting -&gt; Pages -&gt; Branch</code>选择main分支，然后保存，会自动开启<code>https://{github用户名}.github.io</code> 的地址，这地址也是以后访问博客的地址。（<strong>注意：仓库需要设置为public</strong>）</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181729976.png" alt=""></p></li><li><p>然后我们就可以往github仓库上传文件了，先回到<code>dev</code>文件下，进入命令行界面，输入<code>hugo -D</code>生成public文件夹。</p></li><li><p>在public文件夹下执行以下命令上传到github仓库上面。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">git init</span>
<span class="line">git add .</span>
<span class="line">git commit -m &quot;first commit&quot;</span>
<span class="line">git branch -M main</span>
<span class="line">git remote add origin {你的github仓库地址}</span>
<span class="line">git push -u origin main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>上传成功后访<code>https://{github用户名}.github.io</code>，成功搭建属于自己的Hugo博客。</p></li></ul><h3 id="github-action自动部署" tabindex="-1"><a class="header-anchor" href="#github-action自动部署"><span>Github Action自动部署</span></a></h3>`,4),B=l('<li><p>Github上面重新建一个仓库，用于存放Hugo的主文件，可以设置为<code>private</code>。</p></li><li><p>前往<code>settings -&gt; Developer Settings -&gt; Personal access tokens</code>，创建一个token(classic)。</p></li><li><p>token选择永不过期，并且勾选<strong>repo</strong>和<strong>workflow</strong>选项。</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181729591.png" alt=""></p></li><li><p>为保证安全，将生成的token，保存的仓库的变量中，前往<code>Settings -&gt; Secrets and variables -&gt; Actions</code>中设置。（<strong>注意：token只能显示一次，可事先保存</strong>）</p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181729259.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Sazerac-kk/pictures/img/202409181730141.png" alt=""></p></li>',4),E=e("code",null,".github/workflows/xxxx.yaml",-1),A={href:"https://docs.github.com/zh/actions",target:"_blank",rel:"noopener noreferrer"},w=l(`<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">name: deploy</span>
<span class="line"></span>
<span class="line"># 代码提交到main分支时触发github action</span>
<span class="line">on:</span>
<span class="line">  push:</span>
<span class="line">    branches:</span>
<span class="line">      - main</span>
<span class="line"></span>
<span class="line">jobs:</span>
<span class="line">  deploy:</span>
<span class="line">    runs-on: ubuntu-latest</span>
<span class="line">    steps:</span>
<span class="line">        - name: Checkout</span>
<span class="line">          uses: actions/checkout@v4</span>
<span class="line">          with:</span>
<span class="line">              fetch-depth: 0</span>
<span class="line"></span>
<span class="line">        - name: Setup Hugo</span>
<span class="line">          uses: peaceiris/actions-hugo@v3</span>
<span class="line">          with:</span>
<span class="line">              hugo-version: &quot;latest&quot;</span>
<span class="line">              extended: true</span>
<span class="line"></span>
<span class="line">        - name: Build Web</span>
<span class="line">          run: hugo -D</span>
<span class="line"></span>
<span class="line">        - name: Deploy Web</span>
<span class="line">          uses: peaceiris/actions-gh-pages@v4</span>
<span class="line">          with:</span>
<span class="line">              PERSONAL_TOKEN: \${{ secrets.你的token变量名 }}</span>
<span class="line">              EXTERNAL_REPOSITORY: 你的github名/你的仓库名</span>
<span class="line">              PUBLISH_BRANCH: main</span>
<span class="line">              PUBLISH_DIR: ./public</span>
<span class="line">              commit_message: auto deploy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G=l(`<li><p>在hugo主文件创建<code>.gitignore</code>文件，来避免提交不必要的文件。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line"># 自动生成的文件</span>
<span class="line">public</span>
<span class="line">resources</span>
<span class="line">.hugo_build.lock</span>
<span class="line"></span>
<span class="line"># hugo命令</span>
<span class="line">hugo.exe</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将hugo的主文件上传到仓库，上传成功后会触发Github Action，来自动部署你的静态页面。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">git init</span>
<span class="line">git add .</span>
<span class="line">git commit -m &quot;first commit&quot;</span>
<span class="line">git branch -M main</span>
<span class="line">git remote add origin {你的github仓库地址}</span>
<span class="line">git push -u origin main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),H=e("h2",{id:"参考资料",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考资料"},[e("span",null,"参考资料")])],-1),D={href:"https://letere-gzj.github.io/hugo-stack/p/hugohugo--github-%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/#32-github-action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.bilibili.com/video/BV1bovfeaEtQ/?spm_id_from=333.1350.jump_directly",target:"_blank",rel:"noopener noreferrer"};function N(C,P){const s=t("ExternalLinkIcon");return c(),d("div",null,[r,e("ul",null,[e("li",null,[e("p",null,[n("官网址："),e("a",p,[n("Hugo官网"),i(s)])])]),e("li",null,[e("p",null,[n("Github地址:"),e("a",u,[n("gohugoio/hugo"),i(s)])]),g]),h]),m,e("ul",null,[e("li",null,[e("p",null,[n("点击"),e("a",v,[b,i(s)])]),_]),k]),x,e("ul",null,[e("li",null,[e("p",null,[n("再次进入"),e("a",f,[S,i(s)]),n("。")])]),j]),z,e("ul",null,[B,e("li",null,[e("p",null,[n("在hugo主文件创建一个"),E,n("文件，将以下内容复制进去，想具体了解更多，可查看【"),e("a",A,[n("Github Action文档"),i(s)]),n("】。")]),w]),G]),H,e("ul",null,[e("li",null,[e("p",null,[e("a",D,[n("【Hugo】Hugo + Github 免费部署自己的博客 (letere-gzj.github.io)"),i(s)])])]),e("li",null,[e("p",null,[e("a",y,[n("原文视频"),i(s)])])])])])}const R=a(o,[["render",N],["__file","CreateBlog.html.vue"]]),q=JSON.parse('{"path":"/blogs/other/CreateBlog.html","title":"【教程】Hugo+Github博客部署","lang":"zh-CN","frontmatter":{"title":"【教程】Hugo+Github博客部署","date":"2024/9/18","categories":["other"],"author":"Sazerac","tags":["Hugo","Github"]},"headers":[{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[{"level":3,"title":"下载Hugo","slug":"下载hugo","link":"#下载hugo","children":[]},{"level":3,"title":"下载git","slug":"下载git","link":"#下载git","children":[]}]},{"level":2,"title":"搭建博客","slug":"搭建博客","link":"#搭建博客","children":[{"level":3,"title":"创建Blog","slug":"创建blog","link":"#创建blog","children":[]},{"level":3,"title":"下载主题","slug":"下载主题","link":"#下载主题","children":[]}]},{"level":2,"title":"Github部署","slug":"github部署","link":"#github部署","children":[{"level":3,"title":"常规部署","slug":"常规部署","link":"#常规部署","children":[]},{"level":3,"title":"Github Action自动部署","slug":"github-action自动部署","link":"#github-action自动部署","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1726653379000,"updatedTime":1726653734000,"contributors":[{"name":"SazeracWong","email":"Sazerac_Wong@outlook.com","commits":1},{"name":"saber","email":"128914914+Emisaber@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/other/CreateBlog.md"}');export{R as comp,q as data};
